import os
from os.path import join, realpath, dirname
from fabric.api import cd, env, local, run, sudo, settings
from fabric.contrib.project import rsync_project

# This file is designed to live in your project root, with the Chef
# configuration contained in a directory called 'config' directly underneath
# the project root.  If your structure is different, change CONFIG_ROOT below.
CONFIG_ROOT = join(realpath(dirname(__file__)), 'config')

# Update these details with your actual username and server hostnames.
env.user = 'myuser'
env.roledefs = {
    'prod': ['myserver', 'myotherserver'],
    'dev': ['mydevserver'],
}

env.chef_executable = '/var/lib/gems/1.8/bin/chef-solo'
env.cookbook_repo = 'git://github.com/bkonkle/chef-cookbooks.git'
env.disable_known_hosts = True

# Default to the dev role if no role was specified
if not env.get('roles') and not env.get('hosts'):
    env.roles = ['dev']


def bootstrap_chef():
    """
    Installs the necessary dependencies for chef-solo, and run an initial
    synchronization of the config.
    """
    with settings(user='root'):
        # Install the necessary packages
        run('apt-get update')
        run('apt-get -y dist-upgrade')
        run('apt-get install -y git-core rubygems ruby ruby-dev')
        run('gem install --no-rdoc --no-ri chef')
        
        # Copy the local configuration to the server.
        rsync_project(remote_dir='/etc/chef/',
                      local_dir=CONFIG_ROOT + os.linesep)
        
        with settings(warn_only=True):
            with hide('everything'):
                test_cookbook_dir = run('test -d /etc/chef/cookbooks')

        # If the /etc/chef/cookbooks directory already exists, then make
        # sure the cookbook repo is up to date.  Otherwise, clone it.
        if test_cookbook_dir.return_code == 0:
            with cd('/etc/chef/cookbooks'):
                sshagent_run('git reset --hard && git pull')
        else:
            sshagent_run('git clone %s /etc/chef/cookbooks'
                         % env.cookbook_repo)
        
        run('%s -j /etc/chef/nodes/%s.json' % (env.chef_executable, env.host))


def sync_config():
    """
    Synchronizes the local configuration files to the server, and runs
    chef-solo to update the server.
    """
    local('rsync -az --delete %s %s@%s:~/.chefconfig/'
          % (CONFIG_ROOT, env.user, env.host))
    sudo('rsync -az ~/.chefconfig/ /etc/chef/')
    sudo('sudo chown -R root:root /etc/chef/')
    with cd("/etc/chef/cookbooks"):
        sudo('git reset --hard && git pull')
    
    sudo('%s -j /etc/chef/nodes/%s.json' % (env.chef_executable, env.host))
